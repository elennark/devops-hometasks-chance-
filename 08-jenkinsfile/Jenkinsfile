pipeline {
    agent any
    options {
        timestamps()
    }
    tools { go 'go-1.16' }
    environment {
        NEXUS_HOST = '192.168.33.90'
        STAGING_HOST = '192.168.33.80'
        PRODUCTION_HOST = '192.168.33.85'
        USERNAME = 'narko2t1'
        PASSWORD = 'narko2t1'
    }
    stages {
        stage('Downloading source codes') {
            steps {
                git 'https://github.com/narko2t/word-cloud-generator-fortk-.git'
            }
        }

        stage('Source code verification and tests') {
            steps {
                sh 'make lint'
                sh 'make test'
            }
        }

        stage('Build') {
            steps {
                sh '''sed -i "s/1.DEVELOPMENT/1.$BUILD_NUMBER/g" static/version
                          GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v
                          gzip -f artifacts/word-cloud-generator
                   '''
            }
        }


        stage('Upload artifacts to the Nexus repository') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    nexusArtifactUploader artifacts: [[artifactId: 'word-cloud-generator', classifier: '', file: 'artifacts/word-cloud-generator.gz', type: 'gz']], credentialsId: 'nexus-creds', groupId: "pipeline-$BRANCH", nexusUrl: "$NEXUS_HOST:8081", nexusVersion: 'nexus3', protocol: 'http', repository: 'wcg-build', version: "1.$BUILD_NUMBER"
                }
            }
        }

        stage('Deploy on staging') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    sh '''ssh vagrant@$STAGING_HOST sudo service wordcloud stop
                          scp systemd_servies vagrant@$STAGING_HOST:/etc/systemd/system/wordcloud.service
                          ssh vagrant@$STAGING_HOST curl -X GET http://$NEXUS_HOST:8081/repository/wcg-build/pipeline-$BRANCH/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz -o /opt/wordcloud/word-cloud-generator.gz -u $USERNAME:$PASSWORD
                          ssh vagrant@$STAGING_HOST gunzip -f /opt/wordcloud/word-cloud-generator.gz
                          ssh vagrant@$STAGING_HOST chmod +x /opt/wordcloud/word-cloud-generator
                          ssh vagrant@$STAGING_HOST sudo service wordcloud start
                    '''
                }
            }
        }

        stage('Testing on staging server') {
            parallel {
                stage('Test 1') {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                           sh '''ssh vagrant@$STAGING_HOST res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://$STAGING_HOST:8888/version | jq '. | length'` -u $USERNAME:$PASSWORD
                                 ssh vagrant@$STAGING_HOST if [ "1" != "$res" ]; then
                                 ssh vagrant@$STAGING_HOST exit 99
                                 ssh vagrant@$STAGING_HOST fi
                           '''
                        }
                    }
                }

                stage('Test 2') {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                           sh '''ssh vagrant@$STAGING_HOST res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://$STAGING_HOST:8888/api | jq '. | length'` -u $USERNAME:$PASSWORD
                                 ssh vagrant@$STAGING_HOST if [ "7" != "$res" ]; then
                                 ssh vagrant@$STAGING_HOST exit 99
                                 ssh vagrant@$STAGING_HOST fi
                           '''
                        }
                    }
                }
            }
        }

        post {
            success {
                stage('Deploy on prodaction') {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                            sh '''ssh vagrant@$PRODUCTION_HOST sudo service wordcloud stop
                                  scp systemd_servies vagrant@$PRODUCTION_HOST:/etc/systemd/system/wordcloud.service
                                  ssh vagrant@$PRODUCTION_HOST curl -X GET http://$NEXUS_HOST:8081/repository/wcg-build/pipeline-$BRANCH/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz -o /opt/wordcloud/word-cloud-generator.gz -u $USERNAME:$PASSWORD
                                  ssh vagrant@$PRODUCTION_HOST gunzip -f /opt/wordcloud/word-cloud-generator.gz
                                  ssh vagrant@$PRODUCTION_HOST chmod +x /opt/wordcloud/word-cloud-generator
                                  ssh vagrant@$PRODUCTION_HOST sudo service wordcloud start
                            '''
                        }
                    }
                }
            }
        }
    }
}